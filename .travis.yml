language: cpp
dist: xenial

git:
  depth: false

before_cache:
  - brew cleanup

cache:
  directories:
    - $HOME/Library/Caches/Homebrew

matrix:
  include:
  - os: linux
    compiler: gcc
    addons:
      apt:
        sources:
        - sourceline: 'ppa:beineri/opt-qt571-xenial'
        packages:
        - mesa-common-dev # Forgotten dep of qt57base
        - qt57base
        - qt57imageformats
        - qt57svg
        - qt57multimedia
        - qt57quickcontrols
        - qt57quickcontrols2
        - qt57tools
  - os: linux
    compiler: clang
    addons:
      apt:
        sources:
        - sourceline: 'ppa:beineri/opt-qt-5.12.0-xenial'
        packages:
        - mesa-common-dev # Forgotten dep of qt512base
        - qt512base
        - qt512imageformats
        - qt512svg
        - qt512multimedia
        - qt512quickcontrols
        - qt512quickcontrols2
        - qt512tools
        - qt512translations
  - os: osx
    env: [ 'PATH=/usr/local/opt/qt/bin:$PATH"' ]
    addons:
      homebrew:
        packages:
        - qt5

before_install:
- eval "${ENV_EVAL}"
- if [ -f /opt/qt57/bin/qt57-env.sh ]; then . /opt/qt57/bin/qt57-env.sh; fi
- if [ -f /opt/qt512/bin/qt512-env.sh ]; then . /opt/qt512/bin/qt512-env.sh; fi

script:
- mkdir build && pushd build
- export INSTALLDIR=install
- cmake .. -DUSE_INTREE_LIBQMC=1 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_INSTALL_PREFIX=/usr # TODO: add building with an external lib
#- appstream-util validate linux/*.appdata.xml
- cmake --build . --target all
- export DESTDIR=$TRAVIS_BUILD_DIR/$INSTALLDIR
- cmake --build . --target install && find $DESTDIR/
- popd

after_success:
- export VERSION=$(git rev-list --count HEAD) # linuxdeployqt uses this for naming the file
- sed -i -e "s/VERSION_VALUE/git-$VERSION/g" .ci/bintray-release.json
- sed -i -e "s/BINTRAY_SUBJECT/$BINTRAY_SUBJECT/g" .ci/bintray-release.json
- sed -i -e "s/BINTRAY_REPO/$BINTRAY_REPO/g" .ci/bintray-release.json
- sed -i -e "s/BINTRAY_NAME/$BINTRAY_NAME/g" .ci/bintray-release.json
- |
  if [ "$TRAVIS_OS_NAME" = "linux" ] && [ "$CC" = "clang" ]; then
    wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
    chmod a+x linuxdeployqt-continuous-x86_64.AppImage
    unset QTDIR QT_PLUGIN_PATH LD_LIBRARY_PATH
    ./linuxdeployqt-continuous-x86_64.AppImage $INSTALLDIR/usr/share/applications/*.desktop -appimage
    export RELEASE_APPIMAGE=1
  fi

deploy:
- provider: bintray
  file: .ci/bintray-release.json
  user: $BINTRAY_USER
  key: $BINTRAY_TOKEN
  skip_cleanup: true
  on:
    tags: false

- provider: releases
  api_key: $GITHUB_API_KEY
  file: build/quaternion.dmg
  skip_cleanup: true
  on:
    tags: true

- provider: releases
  api_key: $GITHUB_API_KEY
  file: Quaternion*.AppImage
  skip_cleanup: true
  on:
    condition: -n $RELEASE_APPIMAGE
    tags: true

notifications:
  webhooks:
    urls:
    - "https://scalar.vector.im/api/neb/services/hooks/dHJhdmlzLWNpLyU0MGtpdHN1bmUlM0FtYXRyaXgub3JnLyUyMVBDelV0eHRPalV5U3hTZWxvZiUzQW1hdHJpeC5vcmc"
    on_success: change  # always|never|change
    on_failure: always
    on_start: never
